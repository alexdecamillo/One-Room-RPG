{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"bom",
				"bombCount\tint"
			],
			[
				"po",
				"points\tint"
			],
			[
				"m",
				"MinValue\tfloat"
			],
			[
				"b",
				"bomb\tGameObject"
			],
			[
				"Fin",
				"FindObjectOfType<T>()\tT"
			],
			[
				"sw",
				"sword\tSword"
			],
			[
				"vec",
				"Vector3\tVector3"
			],
			[
				"Tr",
				"Translate(Vector3 translation)\tvoid"
			],
			[
				"Translate",
				"Translate(float x, float y, float z)\tvoid"
			],
			[
				"en",
				"enemy\tEnemy"
			],
			[
				"Vec",
				"Vector3\tVector3"
			],
			[
				"Pla",
				"Player\tPlayer"
			],
			[
				"he",
				"healthSlider\tSlider"
			],
			[
				"pr",
				"protected\tprotected"
			],
			[
				"li",
				"livingPlayer\tLivingEntity"
			],
			[
				"GetCo",
				"GetComponent<T>()\tT"
			],
			[
				"FindGameObjec",
				"FindGameObjectWithTag(string tag)\tGameObject"
			],
			[
				"hea",
				"health\tfloat"
			],
			[
				"h",
				"health\tfloat"
			],
			[
				"heal",
				"healthSlider\tSlider"
			],
			[
				"tar",
				"targetEntity\tLivingEntity"
			],
			[
				"Get",
				"GetComponent<T>()\tT"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/Scripts/LayBombs.cs",
			"settings":
			{
				"buffer_size": 2591,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/WeaponButton.cs",
			"settings":
			{
				"buffer_size": 635,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Managers/SpawnManager.cs",
			"settings":
			{
				"buffer_size": 3511,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using UnityEngine;\nusing System.Collections;\n\npublic class Spawner : MonoBehaviour {\n\n\tSpawnManager manager;\n\tSpawnManager spawner;\n\t\n\n\tWave[] waves;\n\n\tpublic Enemy spawn;\n\tpublic Transform[] spawners;\n\tpublic bool dayCycle = true;\n\n\tTransform spawnPoint;\n\n\tWave currentWave;\n\tint currentWaveNumber;\n\n\tint enemiesRemainingToSpawn;\n\tint enemiesRemainingAlive;\n\tfloat nextSpawnTime;\n\n\tbool RoundCheck() {\n\t\tif (manager.GetRoundComplete()) return true;\n\t\telse return false;\n\t}\n\n\tvoid Start() {\n\t\t\n\n\t\tspawner = FindObjectOfType<SpawnManager>();\n\t\tmanager = GetComponentInParent<SpawnManager>();\n\t\tmanager.Start();\n\n\t\tfor (int i = 0; i <= transform.childCount - 1; i++)\n\t\t\tspawners[i] = transform.GetChild(i);\n\n\t\tSetWaves();\n\t\tNextWave();\n\t}\n\n\tvoid Update() {\n\t\tif (enemiesRemainingToSpawn > 0 && Time.time > nextSpawnTime && Time.time > currentWave.delay) {\n\t\t\tFindSpawnPoint();\n\t\t\tenemiesRemainingToSpawn--;\n\t\t\tnextSpawnTime = Time.time + currentWave.timeBetweenSpawns;\n\n\t\t\tEnemy spawnedEnemy = Instantiate(spawn, spawnPoint.position, Quaternion.identity) as Enemy;\n\t\t\tspawnedEnemy.OnDeath += OnEnemyDeath;\n\t\t}\n\t\telse if (enemiesRemainingAlive == 0 && currentWaveNumber != waves.Length) {\n\t\t\tNextWave();\n\t\t}\n\t\tif (RoundCheck()) {\n\t\t\tDebug.Log(gameObject.name + \" round complete\");\n\t\t\tSetWaves();\n\t\t\tNextWave();\n\t\t}\n\t}\n\n\tvoid OnEnemyDeath() {\n\t\tenemiesRemainingAlive--;\n\t\tDebug.Log(\"Enemy was killed\");\n\t\tif (enemiesRemainingAlive == 0 && currentWaveNumber >= waves.Length) {\n\t\t\tDebug.Log(\"Spawner round ended\");\n\t\t\tmanager.RoundEnd();\n\t\t}\n\t\telse if (enemiesRemainingAlive == 0) {\n\t\t\tNextWave();\n\t\t}\n\t}\n\n\tvoid NextWave() {\n\n\t\tif (spawner.dayCycle == false) {\n\t\t\tif (currentWaveNumber < waves.Length) {\n\t\t\t\tcurrentWave = waves [currentWaveNumber];\n\n\t\t\t\tenemiesRemainingToSpawn = currentWave.enemyCount;\n\t\t\t\tenemiesRemainingAlive = enemiesRemainingToSpawn;\n\t\t\t\tcurrentWave.delay += Time.time;\n\n\t\t\t\tDebug.Log (\"Round: \" + manager.GetRoundNum () + \"Wave: \" + (currentWaveNumber + 1) + \". Enemies: \" + enemiesRemainingToSpawn);\n\t\t\t}\n\t\t\tcurrentWaveNumber++;\n\t\t}\n\t}\n\n\tvoid FindSpawnPoint() {\n\t\tint point = Random.Range(0, spawners.Length);\n\t\tspawnPoint = spawners[point];\n\t}\n\n\tvoid SetWaves() {\n\t\tDebug.Log(\"Waves set\");\n\t\twaves = manager.GetWaves();\n\t\tcurrentWaveNumber = 0;\n\t}\n\n\t//[System.Serializable]\n\tpublic class Wave\n\t{\n\t\tpublic int enemyCount;\n\n\t\t// time in seconds\n\t\tpublic float timeBetweenSpawns;\n\t\tpublic float delay;\n\t}\n}\n",
			"file": "Assets/Scripts/Managers/Spawner.cs",
			"file_size": 2533,
			"file_write_time": 131322413374303723,
			"settings":
			{
				"buffer_size": 2424,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Player/Player.cs",
			"settings":
			{
				"buffer_size": 3185,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 414.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/Unity Projects/One-Room-RPG/Assets/Scripts",
		"/F/Unity Projects/One-Room-RPG/Assets/Scripts/Enemies",
		"/F/Unity Projects/One-Room-RPG/Assets/Scripts/Managers",
		"/F/Unity Projects/One-Room-RPG/Assets/Scripts/Player"
	],
	"file_history":
	[
		"/F/Unity Projects/One-Room-RPG/Assets/Scripts/Enemies/Enemy.cs",
		"/F/Unity Projects/One-Room-RPG/Assets/Scripts/Managers/LivingEntity.cs",
		"/F/Unity Projects/One-Room-RPG/Assets/Scripts/Sword.cs",
		"/F/Unity Projects/One-Room-RPG/Assets/Scripts/Player/PlayerController.cs",
		"/F/Unity Projects/One-Room-RPG/One-Room.sublime-project",
		"/F/Unity Projects/2D-Platformer/2D Platforming Game/Assets/Scripts/LivingEntity.cs",
		"/F/Unity Projects/2D-Platformer/2D Platforming Game/Assets/Scripts/GameUI.cs",
		"/F/Unity Projects/2D-Platformer/2D Platforming Game/Assets/Scripts/iDamageable.cs",
		"/F/Unity Projects/2D-Platformer/2D Platforming Game/Assets/Scripts/CameraFollow.cs",
		"/F/Unity Projects/2D-Platformer/2D Platforming Game/Assets/Scripts/Enemy.cs",
		"/F/Unity Projects/2D-Platformer/2D Platforming Game/Assets/Scripts/Game UI.cs",
		"/F/Unity Projects/2D-Platformer/2D Platforming Game/2D Platforming Game"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"slider",
			"path"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Scripts/LayBombs.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2591,
						"regions":
						{
						},
						"selection":
						[
							[
								2309,
								2309
							]
						],
						"settings":
						{
							"oops":
							{
								"1269,1271": "Convert to '&=' expresssion",
								"1319,1321": "Convert to '|=' expresssion",
								"1398,1399": "Comparison with 'false' is redundant",
								"140,148": "Name should have prefix '_'. (Rule 'Fields').",
								"151,156": "Initializing field by default value is redundant",
								"1612,1613": "Comparison with 'true' is redundant",
								"19,24": "Using directive is not used by code and can be removed safely.",
								"1993,1994": "Comparison with 'true' is redundant",
								"226,235": "Name should have prefix '_'. (Rule 'Fields').",
								"238,239": "Initializing field by default value is redundant",
								"2434,2442": "Parameter can be declared with base type",
								"383,387": "Name should have prefix '_'. (Rule 'Fields').",
								"438,447": "Name should have prefix '_'. (Rule 'Fields').",
								"450,451": "Initializing field by default value is redundant",
								"506,517": "Name should have prefix '_'. (Rule 'Fields').",
								"520,521": "Initializing field by default value is redundant",
								"539,548": "Name should have prefix '_'. (Rule 'Fields').",
								"563,572": "Convert to constant",
								"575,580": "Initializing field by default value is redundant",
								"595,611": "Name should have prefix '_'. (Rule 'Fields').",
								"614,619": "Initializing field by default value is redundant",
								"636,642": "Name should have prefix '_'. (Rule 'Fields').",
								"658,668": "Name should have prefix '_'. (Rule 'Fields').",
								"684,691": "Name should have prefix '_'. (Rule 'Fields').",
								"845,852": "Name should have prefix '_'. (Rule 'Fields')."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/Scripts/WeaponButton.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 635,
						"regions":
						{
						},
						"selection":
						[
							[
								619,
								591
							]
						],
						"settings":
						{
							"oops":
							{
								"19,24": "Using directive is not used by code and can be removed safely.",
								"197,209": "Name should have prefix '_'. (Rule 'Fields').",
								"225,234": "Convert to constant",
								"237,238": "Initializing field by default value is redundant",
								"45,50": "Using directive is not used by code and can be removed safely.",
								"576,580": "Redundant 'else' keyword"
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/Scripts/Managers/SpawnManager.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3511,
						"regions":
						{
						},
						"selection":
						[
							[
								2962,
								2962
							]
						],
						"settings":
						{
							"oops":
							{
								"19,24": "Using directive is not used by code and can be removed safely.",
								"3316,3317": "Use 'var' keyword",
								"332,345": "Convert to constant",
								"3464,3472": "Name should have prefix '_'. (Rule 'Fields').",
								"348,349": "Initializing field by default value is redundant",
								"368,379": "Convert to constant",
								"391,402": "Convert to constant",
								"490,498": "Name should have prefix '_'. (Rule 'Fields').",
								"828,833": "Parameter can be declared with base type",
								"836,841": "Parameter 'round' hides field 'SpawnManager.round'"
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/Scripts/Managers/Spawner.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2424,
						"regions":
						{
						},
						"selection":
						[
							[
								1052,
								1061
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 210.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Assets/Scripts/Player/Player.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3185,
						"regions":
						{
						},
						"selection":
						[
							[
								404,
								404
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"1012,1019": "Use 'var' keyword",
								"1296,1301": "Use 'var' keyword",
								"1451,1452": "Assignment is redundant",
								"1834,1835": "Comparison with 'true' is redundant",
								"240,245": "Initializing field by default value is redundant",
								"26,31": "Using directive is not used by code and can be removed safely.",
								"261,271": "Name should have prefix '_'. (Rule 'Fields').",
								"2700,2708": "Parameter can be declared with base type",
								"2759,2760": "Comparison with 'true' is redundant",
								"287,294": "Name should have prefix '_'. (Rule 'Fields').",
								"2891,2892": "Comparison with 'true' is redundant",
								"2998,3006": "Parameter can be declared with base type",
								"309,318": "Name should have prefix '_'. (Rule 'Fields').",
								"335,344": "Name should have prefix '_'. (Rule 'Fields').",
								"359,365": "Name should have prefix '_'. (Rule 'Fields').",
								"389,394": "Initializing field by default value is redundant",
								"408,414": "Name should have prefix '_'. (Rule 'Fields').",
								"417,418": "Initializing field by default value is redundant",
								"540,548": "Name should have prefix '_'. (Rule 'Fields')."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 120.0
	},
	"pinned_build_system": "",
	"project": "One-Room.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 247.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
